# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/development/cicd/templates/
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - build
  - test

build-x64:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Compiling the code...(for x64)"
    - mkdir build_x64 && cd build_x64
    - cmake -DTARGET_CPU=x64 ..
    - make
    - echo "Compile complete.(for x64)"
  artifacts:
    paths:
      - build_x64/libsample.a
      - build_x64/multiplat_sample
      - build_x64/CMakeFiles/sample.dir/lib/src/*.gcno

build-arm64:
  stage: build
  script:
    - echo "Compiling the code...(for arm64)"
    - mkdir build_arm64 && cd build_arm64
    - cmake -DTARGET_CPU=arm64 ..
    - make
    - echo "Compile complete.(for arm64)"
  artifacts:
    paths:
      - build_arm64/libsample.a
      - build_arm64/multiplat_sample
      - build_arm64/CMakeFiles/sample.dir/lib/src/*.gcno

execute-x64:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running executable...(x64)"
    - cd build_x64
    - ./multiplat_sample
    - echo "Create Coverage Reports...(x64)"
    - cd CMakeFiles/sample.dir/lib/src
    - lcov -c -d . -o lcovinfo
    - genhtml -o html lcovinfo
    - echo "Done. (x64)"
  artifacts:
    paths:
      - build_x64/CMakeFiles/sample.dir/lib/src/*.gcda
      - build_x64/CMakeFiles/sample.dir/lib/src/html/*

execute-arm64:
  stage: test
  script:
    - echo "Running executable...(arm64)"
    - cd build_arm64
    - qemu-aarch64 -L /usr/aarch64-linux-gnu/ ./multiplat_sample
    - echo "Create Coverage Reports...(arm64)"
    - cd CMakeFiles/sample.dir/lib/src
    - lcov -c -d . -o lcovinfo
    - genhtml -o html lcovinfo
    - echo "Done.(arm64)"
  artifacts:
    paths:
      - build_arm64/CMakeFiles/sample.dir/lib/src/*.gcda
      - build_arm64/CMakeFiles/sample.dir/lib/src/html/*

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - echo "No lint issues found."

